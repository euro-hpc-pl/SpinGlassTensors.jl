var documenterSearchIndex = {"docs":
[{"location":"","page":"-","title":"-","text":"Modules = [SpinGlassTensors]\n","category":"page"},{"location":"#SpinGlassTensors.AbstractMPO","page":"-","title":"SpinGlassTensors.AbstractMPO","text":"abstract type AbstractMPO{T} <: AbstractTensorNetwork{T}\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.AbstractMPS","page":"-","title":"SpinGlassTensors.AbstractMPS","text":"abstract type AbstractMPS{T} <: AbstractTensorNetwork{T}\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.AbstractPEPSRow","page":"-","title":"SpinGlassTensors.AbstractPEPSRow","text":"abstract type AbstractPEPSRow{T} <: AbstractTensorNetwork{T}\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.AbstractSparseTensor","page":"-","title":"SpinGlassTensors.AbstractSparseTensor","text":"abstract type AbstractSparseTensor\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.AbstractTensorNetwork","page":"-","title":"SpinGlassTensors.AbstractTensorNetwork","text":"abstract type AbstractTensorNetwork{T}\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.Environment","page":"-","title":"SpinGlassTensors.Environment","text":"Environment(bra::QMPS, mpo::QMPO, ket::QMPS) -> SpinGlassTensors.Environment\nEnvironment(bra::QMPS, mpo::QMPO, ket::QMPS, trans::Symbol) -> SpinGlassTensors.Environment\n\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.Environment-2","page":"-","title":"SpinGlassTensors.Environment","text":"mutable struct Environment{T<:Real, S}\n\nbra::QMPS\nmpo::QMPO\nket::QMPS\nenv::Dict{Tuple{Union{Rational{Int64}, Int64}, Symbol}, Tensor{T}} where T<:Real\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.IdentityMPO","page":"-","title":"SpinGlassTensors.IdentityMPO","text":"struct IdentityMPO{T<:Number, S<:AbstractArray} <: AbstractMPO{T<:Number}\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.IdentityMPO-Tuple{}","page":"-","title":"SpinGlassTensors.IdentityMPO","text":"IdentityMPO() -> IdentityMPO{Float64, Array}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.IdentityMPO-Union{Tuple{Type{T}}, Tuple{T}} where T<:AbstractArray","page":"-","title":"SpinGlassTensors.IdentityMPO","text":"IdentityMPO(_::Type{T<:AbstractArray}) -> Type{IdentityMPO{Float64, _A}} where _A\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.IdentityMPO-Union{Tuple{T}, Tuple{S}, Tuple{Type{S}, Type{T}}} where {S<:Number, T<:AbstractArray}","page":"-","title":"SpinGlassTensors.IdentityMPO","text":"IdentityMPO(_::Type{S<:Number}, _::Type{T<:AbstractArray}) -> Type{IdentityMPO{_A, _B}} where {_A, _B}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.IdentityMPS","page":"-","title":"SpinGlassTensors.IdentityMPS","text":"struct IdentityMPS{T<:Number, S<:AbstractArray} <: AbstractMPS{T<:Number}\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.IdentityMPS-Tuple{}","page":"-","title":"SpinGlassTensors.IdentityMPS","text":"IdentityMPS() -> IdentityMPS{Float64, Array}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.IdentityMPS-Union{Tuple{Type{T}}, Tuple{T}} where T<:AbstractArray","page":"-","title":"SpinGlassTensors.IdentityMPS","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.IdentityMPS-Union{Tuple{T}, Tuple{S}, Tuple{Type{S}, Type{T}}} where {S<:Number, T<:AbstractArray}","page":"-","title":"SpinGlassTensors.IdentityMPS","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.MPO","page":"-","title":"SpinGlassTensors.MPO","text":"struct MPO{T<:Number} <: AbstractMPO{T<:Number}\n\ntensors::Array{Array{T, 4}, 1} where T<:Number\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.MPO-Tuple{Int64}","page":"-","title":"SpinGlassTensors.MPO","text":"MPO(L::Int64) -> MPO{Float64}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.MPO-Union{Tuple{T}, Tuple{Type{T}, Int64}} where T","page":"-","title":"SpinGlassTensors.MPO","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.MPS","page":"-","title":"SpinGlassTensors.MPS","text":"MPS(A::AbstractArray, s::Symbol) -> Any\nMPS(A::AbstractArray, s::Symbol, Dcut::Int64) -> Any\n\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.MPS-2","page":"-","title":"SpinGlassTensors.MPS","text":"struct MPS{T<:Number} <: AbstractMPS{T<:Number}\n\ntensors::Array{Array{T, 3}, 1} where T<:Number\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.MPS-Tuple{AbstractArray}","page":"-","title":"SpinGlassTensors.MPS","text":"MPS(A::AbstractArray) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.MPS-Tuple{Int64}","page":"-","title":"SpinGlassTensors.MPS","text":"MPS(L::Int64) -> MPS{Float64}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.MPS-Tuple{QMPS}","page":"-","title":"SpinGlassTensors.MPS","text":"MPS(ket::QMPS) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.MPS-Union{Tuple{Array{Vector{T}, 1}}, Tuple{T}} where T<:Number","page":"-","title":"SpinGlassTensors.MPS","text":"MPS(states::Array{Array{T<:Number, 1}, 1}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.MPS-Union{Tuple{T}, Tuple{Type{T}, Int64}} where T","page":"-","title":"SpinGlassTensors.MPS","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.PEPSRow","page":"-","title":"SpinGlassTensors.PEPSRow","text":"struct PEPSRow{T<:Number} <: AbstractPEPSRow{T<:Number}\n\ntensors::Array{Array{T, 5}, 1} where T<:Number\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.PEPSRow-Tuple{Int64}","page":"-","title":"SpinGlassTensors.PEPSRow","text":"PEPSRow(L::Int64) -> PEPSRow{Float64}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.PEPSRow-Union{Tuple{T}, Tuple{Type{T}, Int64}} where T","page":"-","title":"SpinGlassTensors.PEPSRow","text":"PEPSRow(_::Type{T}, L::Int64) -> PEPSRow\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.QMPO","page":"-","title":"SpinGlassTensors.QMPO","text":"struct QMPO{T<:Real} <: AbstractMPO{T<:Real}\n\ntensors::Dict{<:Union{Rational{Int64}, Int64}, <:Dict{<:Union{Rational{Int64}, Int64}, <:Tensor{T}}} where T<:Real\nsites::Vector{<:Union{Rational{Int64}, Int64}}\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.QMPO-Tuple{AbstractMPO}","page":"-","title":"SpinGlassTensors.QMPO","text":"QMPO(ϕ::AbstractMPO) -> QMPO\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.QMPO-Tuple{Dict{<:Union{Rational{Int64}, Int64}, <:Dict{<:Union{Rational{Int64}, Int64}, <:Tensor}}}","page":"-","title":"SpinGlassTensors.QMPO","text":"QMPO(tensors::Dict{<:Union{Rational{Int64}, Int64}, <:Dict{<:Union{Rational{Int64}, Int64}, <:Tensor}}) -> QMPO\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.QMPS","page":"-","title":"SpinGlassTensors.QMPS","text":"struct QMPS{T<:Real} <: AbstractMPS{T<:Real}\n\ntensors::Dict{<:Union{Rational{Int64}, Int64}, <:Tensor{T}} where T<:Real\nsites::Vector{<:Union{Rational{Int64}, Int64}}\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.QMPS-Tuple{AbstractMPS}","page":"-","title":"SpinGlassTensors.QMPS","text":"QMPS(ϕ::AbstractMPS) -> QMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.QMPS-Tuple{Dict{<:Union{Rational{Int64}, Int64}, <:Tensor}}","page":"-","title":"SpinGlassTensors.QMPS","text":"QMPS(tensors::Dict{<:Union{Rational{Int64}, Int64}, <:Tensor}) -> QMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.SparseSiteTensor","page":"-","title":"SpinGlassTensors.SparseSiteTensor","text":"struct SparseSiteTensor{T} <: SpinGlassTensors.AbstractSparseTensor\n\nloc_exp::Vector\nprojs::Tuple{Vararg{Vector{Int64}, N}} where N\n\n\n\n\n\n","category":"type"},{"location":"#SpinGlassTensors.SparseVirtualTensor","page":"-","title":"SpinGlassTensors.SparseVirtualTensor","text":"struct SparseVirtualTensor{T} <: SpinGlassTensors.AbstractSparseTensor\n\ncon::Matrix\nprojs::Tuple{Vararg{Vector{Int64}, N}} where N\n\n\n\n\n\n","category":"type"},{"location":"#Base.:==-Tuple{MPO, MPO}","page":"-","title":"Base.:==","text":"==(a::MPO, b::MPO) -> Union{Missing, Bool}\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.:==-Tuple{MPS, MPS}","page":"-","title":"Base.:==","text":"==(a::MPS, b::MPS) -> Union{Missing, Bool}\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.:==-Tuple{PEPSRow, PEPSRow}","page":"-","title":"Base.:==","text":"==(a::PEPSRow, b::PEPSRow) -> Union{Missing, Bool}\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.:≈-Tuple{MPO, MPO}","page":"-","title":"Base.:≈","text":"≈(a::MPO, b::MPO) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.:≈-Tuple{MPS, MPS}","page":"-","title":"Base.:≈","text":"≈(a::MPS, b::MPS) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.:≈-Tuple{PEPSRow, PEPSRow}","page":"-","title":"Base.:≈","text":"≈(a::PEPSRow, b::PEPSRow) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.copy-Tuple{MPO}","page":"-","title":"Base.copy","text":"copy(a::MPO) -> MPO\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.copy-Tuple{MPS}","page":"-","title":"Base.copy","text":"copy(a::MPS) -> MPS\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.copy-Tuple{PEPSRow}","page":"-","title":"Base.copy","text":"copy(a::PEPSRow) -> PEPSRow\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.eachindex-Tuple{AbstractTensorNetwork}","page":"-","title":"Base.eachindex","text":"eachindex(a::AbstractTensorNetwork) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.eltype-Union{Tuple{AbstractMPO{T}}, Tuple{T}} where T","page":"-","title":"Base.eltype","text":"\n\n\n\n","category":"method"},{"location":"#Base.eltype-Union{Tuple{AbstractMPS{T}}, Tuple{T}} where T","page":"-","title":"Base.eltype","text":"\n\n\n\n","category":"method"},{"location":"#Base.eltype-Union{Tuple{AbstractPEPSRow{T}}, Tuple{T}} where T","page":"-","title":"Base.eltype","text":"\n\n\n\n","category":"method"},{"location":"#Base.getindex-Tuple{AbstractTensorNetwork, Any}","page":"-","title":"Base.getindex","text":"getindex(a::AbstractTensorNetwork, i) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.getindex-Union{Tuple{T}, Tuple{S}, Tuple{IdentityMPO{S, T}, Int64}} where {S, T}","page":"-","title":"Base.getindex","text":"getindex(_::IdentityMPO{S, T}, _::Int64) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.getindex-Union{Tuple{T}, Tuple{S}, Tuple{IdentityMPS{S, T}, Int64}} where {S, T}","page":"-","title":"Base.getindex","text":"getindex(_::IdentityMPS{S, T}, _::Int64) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.hash-Tuple{MPO, UInt64}","page":"-","title":"Base.hash","text":"hash(a::MPO, h::UInt64) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.hash-Tuple{MPS, UInt64}","page":"-","title":"Base.hash","text":"hash(a::MPS, h::UInt64) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.hash-Tuple{PEPSRow, UInt64}","page":"-","title":"Base.hash","text":"hash(a::PEPSRow, h::UInt64) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.iterate-Tuple{AbstractTensorNetwork, Any}","page":"-","title":"Base.iterate","text":"iterate(a::AbstractTensorNetwork, state) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.iterate-Tuple{AbstractTensorNetwork}","page":"-","title":"Base.iterate","text":"iterate(a::AbstractTensorNetwork) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.lastindex-Tuple{AbstractTensorNetwork}","page":"-","title":"Base.lastindex","text":"lastindex(a::AbstractTensorNetwork) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.length-Tuple{AbstractTensorNetwork}","page":"-","title":"Base.length","text":"length(a::AbstractTensorNetwork) -> Float64\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.length-Tuple{Union{IdentityMPO, IdentityMPS}}","page":"-","title":"Base.length","text":"length(_::Union{IdentityMPO, IdentityMPS}) -> Float64\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.randn-Tuple{Type{MPO}}","page":"-","title":"Base.randn","text":"randn(_::Type{MPO})\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.randn-Tuple{Type{MPS}}","page":"-","title":"Base.randn","text":"randn(_::Type{MPS})\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.randn-Union{Tuple{T}, Tuple{Type{MPO{T}}, Int64, Int64, Int64}} where T","page":"-","title":"Base.randn","text":"randn(_::Type{MPO{T}}, L::Int64, D::Int64, d::Int64) -> MPO\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.randn-Union{Tuple{T}, Tuple{Type{MPO{T}}, Int64, Union{Vector, Tuple{Vararg{T, N}} where {N, T}}}} where T","page":"-","title":"Base.randn","text":"randn(_::Type{MPO{T}}, D::Int64, rank::Union{Vector, Tuple{Vararg{T, N}} where {N, T}}) -> MPO\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.randn-Union{Tuple{T}, Tuple{Type{MPS{T}}, Int64, Int64, Int64}} where T","page":"-","title":"Base.randn","text":"randn(_::Type{MPS{T}}, L::Int64, D::Int64, d::Int64) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.randn-Union{Tuple{T}, Tuple{Type{MPS{T}}, Int64, Union{Vector, Tuple{Vararg{T, N}} where {N, T}}}} where T","page":"-","title":"Base.randn","text":"randn(_::Type{MPS{T}}, D::Int64, rank::Union{Vector, Tuple{Vararg{T, N}} where {N, T}}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.setindex!-Tuple{AbstractMPO, AbstractArray{<:Number, 4}, Int64}","page":"-","title":"Base.setindex!","text":"setindex!(a::AbstractMPO, A::AbstractArray{<:Number, 4}, i::Int64) -> AbstractArray{<:Number, 4}\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.setindex!-Tuple{AbstractMPS, AbstractArray{<:Number, 3}, Int64}","page":"-","title":"Base.setindex!","text":"setindex!(a::AbstractMPS, A::AbstractArray{<:Number, 3}, i::Int64) -> AbstractArray{<:Number, 3}\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.setindex!-Tuple{AbstractPEPSRow, AbstractArray{<:Number, 5}, Int64}","page":"-","title":"Base.setindex!","text":"setindex!(a::AbstractPEPSRow, A::AbstractArray{<:Number, 5}, i::Int64) -> AbstractArray{<:Number, 5}\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.setindex!-Tuple{AbstractTensorNetwork, AbstractArray, Union{Rational{Int64}, Int64}}","page":"-","title":"Base.setindex!","text":"setindex!(ket::AbstractTensorNetwork, A::AbstractArray, i::Union{Rational{Int64}, Int64}) -> AbstractArray{<:Number, 4}\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, AbstractTensorNetwork}","page":"-","title":"Base.show","text":"show(io::IO, ψ::AbstractTensorNetwork)\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Union{IdentityMPO, IdentityMPS}}","page":"-","title":"Base.show","text":"show(io::IO, _::Union{IdentityMPO, IdentityMPS})\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.size-Tuple{AbstractTensorNetwork}","page":"-","title":"Base.size","text":"size(a::AbstractTensorNetwork) -> Tuple{Any}\n\n\n\n\n\n\n","category":"method"},{"location":"#Base.size-Tuple{SpinGlassTensors.AbstractSparseTensor}","page":"-","title":"Base.size","text":"size(tens::SpinGlassTensors.AbstractSparseTensor) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{AbstractMPO, AbstractMPO}","page":"-","title":"LinearAlgebra.dot","text":"dot(O1::AbstractMPO, O2::AbstractMPO) -> AbstractMPO\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{AbstractMPO, AbstractMPS}","page":"-","title":"LinearAlgebra.dot","text":"dot(O::AbstractMPO, ψ::AbstractMPS) -> QMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{AbstractMPO, IdentityMPO}","page":"-","title":"LinearAlgebra.dot","text":"dot(O::AbstractMPO, _::IdentityMPO) -> AbstractMPO\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{AbstractMPO, IdentityMPS}","page":"-","title":"LinearAlgebra.dot","text":"dot(O::AbstractMPO, _::IdentityMPS) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{AbstractMPS, AbstractMPS}","page":"-","title":"LinearAlgebra.dot","text":"dot(ϕ::AbstractMPS, ψ::AbstractMPS) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{AbstractMPS, IdentityMPO}","page":"-","title":"LinearAlgebra.dot","text":"dot(ψ::AbstractMPS, _::IdentityMPO) -> AbstractMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{AbstractMPS, Union{Vector, Tuple{Vararg{T, N}} where {N, T}}, AbstractMPS}","page":"-","title":"LinearAlgebra.dot","text":"dot(ϕ::AbstractMPS, O::Union{Vector, Tuple{Vararg{T, N}} where {N, T}}, ψ::AbstractMPS) -> Any\n\n\nCalculates braphi O ketpsi\n\nDetails\n\nCalculates the matrix element of O\n\nbraphi O ketpsi\n\nin one pass, utlizing TensorOperations.\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{IdentityMPO, AbstractMPO}","page":"-","title":"LinearAlgebra.dot","text":"dot(_::IdentityMPO, O::AbstractMPO) -> AbstractMPO\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{IdentityMPO, AbstractMPS}","page":"-","title":"LinearAlgebra.dot","text":"dot(_::IdentityMPO, ψ::AbstractMPS) -> AbstractMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{MPO, QMPS}","page":"-","title":"LinearAlgebra.dot","text":"dot(W::MPO, ϕ::QMPS) -> QMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{QMPS, MPO}","page":"-","title":"LinearAlgebra.dot","text":"dot(ϕ::QMPS, W::MPO) -> QMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Tuple{QMPS, QMPS}","page":"-","title":"LinearAlgebra.dot","text":"dot(ψ::QMPS, ϕ::QMPS) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Union{Tuple{S}, Tuple{QMPO{S}, QMPS{S}}} where S<:Real","page":"-","title":"LinearAlgebra.dot","text":"dot(ψ::QMPO{S<:Real}, ϕ::QMPS{S<:Real}) -> QMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.dot-Union{Tuple{S}, Tuple{QMPS{S}, QMPO{S}}} where S<:Real","page":"-","title":"LinearAlgebra.dot","text":"dot(ϕ::QMPS{S<:Real}, ψ::QMPO{S<:Real}) -> QMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.norm-Tuple{AbstractMPS}","page":"-","title":"LinearAlgebra.norm","text":"norm(ψ::AbstractMPS) -> Any\n\n\nCalculates the norm of an MPS ketphi\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.norm-Tuple{QMPS}","page":"-","title":"LinearAlgebra.norm","text":"norm(ψ::QMPS) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#LinearAlgebra.rank-Tuple{AbstractMPS}","page":"-","title":"LinearAlgebra.rank","text":"rank(ψ::AbstractMPS) -> Tuple\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.IdentityQMps","page":"-","title":"SpinGlassTensors.IdentityQMps","text":"IdentityQMps(loc_dims::Dict)\nIdentityQMps(loc_dims::Dict, Dmax::Int64)\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors._dot-Union{Tuple{S}, Tuple{QMPO{S}, QMPS{S}, Any}} where S<:Real","page":"-","title":"SpinGlassTensors._dot","text":"_dot(ψ::QMPO{S<:Real}, ϕ::QMPS{S<:Real}, contract_func) -> QMPS\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._left_nbrs_site-Tuple{Union{Rational{Int64}, Int64}, Any}","page":"-","title":"SpinGlassTensors._left_nbrs_site","text":"_left_nbrs_site(site::Union{Rational{Int64}, Int64}, sorted_sites) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._left_sweep","page":"-","title":"SpinGlassTensors._left_sweep","text":"_left_sweep(A::AbstractArray) -> Any\n_left_sweep(A::AbstractArray, Dcut::Int64) -> Any\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors._left_sweep!","page":"-","title":"SpinGlassTensors._left_sweep!","text":"_left_sweep!(ψ::QMPS)\n_left_sweep!(ψ::QMPS, Dcut::Int64)\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors._left_sweep!-2","page":"-","title":"SpinGlassTensors._left_sweep!","text":"_left_sweep!(ψ::AbstractMPS)\n_left_sweep!(ψ::AbstractMPS, Dcut::Int64)\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors._left_sweep_var!!-Tuple{AbstractMPS, Vector{<:AbstractMatrix}, AbstractMPS}","page":"-","title":"SpinGlassTensors._left_sweep_var!!","text":"_left_sweep_var!!(ϕ::AbstractMPS, env::Vector{<:AbstractMatrix}, ψ::AbstractMPS) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._left_sweep_var!-Tuple{SpinGlassTensors.Environment}","page":"-","title":"SpinGlassTensors._left_sweep_var!","text":"_left_sweep_var!(env::SpinGlassTensors.Environment)\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._left_sweep_var_twosite!-Tuple{SpinGlassTensors.Environment, Int64, Number}","page":"-","title":"SpinGlassTensors._left_sweep_var_twosite!","text":"_left_sweep_var_twosite!(env::SpinGlassTensors.Environment, Dcut::Int64, tol::Number)\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._psvd","page":"-","title":"SpinGlassTensors._psvd","text":"_psvd(A::AbstractMatrix) -> Tuple{Any, Any, Any}\n_psvd(A::AbstractMatrix, Dcut::Int64) -> Tuple{Any, Any, Any}\n_psvd(A::AbstractMatrix, Dcut::Int64, tol::Float64) -> Tuple{Any, Any, Any}\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors._qr_fix-Union{Tuple{T}, Tuple{T, AbstractMatrix}} where T<:(AbstractMatrix)","page":"-","title":"SpinGlassTensors._qr_fix","text":"_qr_fix(Q::AbstractMatrix, R::AbstractMatrix) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._right_nbrs_site-Tuple{Union{Rational{Int64}, Int64}, Any}","page":"-","title":"SpinGlassTensors._right_nbrs_site","text":"_right_nbrs_site(site::Union{Rational{Int64}, Int64}, sorted_sites) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._right_sweep","page":"-","title":"SpinGlassTensors._right_sweep","text":"_right_sweep(A::AbstractArray) -> Any\n_right_sweep(A::AbstractArray, Dcut::Int64) -> Any\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors._right_sweep!","page":"-","title":"SpinGlassTensors._right_sweep!","text":"_right_sweep!(ψ::QMPS)\n_right_sweep!(ψ::QMPS, Dcut::Int64)\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors._right_sweep!-2","page":"-","title":"SpinGlassTensors._right_sweep!","text":"_right_sweep!(ψ::AbstractMPS)\n_right_sweep!(ψ::AbstractMPS, Dcut::Int64)\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors._right_sweep_var!!-Tuple{AbstractMPS, Vector{<:AbstractMatrix}, AbstractMPS}","page":"-","title":"SpinGlassTensors._right_sweep_var!!","text":"_right_sweep_var!!(ϕ::AbstractMPS, env::Vector{<:AbstractMatrix}, ψ::AbstractMPS) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._right_sweep_var!-Tuple{SpinGlassTensors.Environment}","page":"-","title":"SpinGlassTensors._right_sweep_var!","text":"_right_sweep_var!(env::SpinGlassTensors.Environment)\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._right_sweep_var_twosite!-Tuple{SpinGlassTensors.Environment, Int64, Number}","page":"-","title":"SpinGlassTensors._right_sweep_var_twosite!","text":"_right_sweep_var_twosite!(env::SpinGlassTensors.Environment, Dcut::Int64, tol::Number)\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._show_sizes","page":"-","title":"SpinGlassTensors._show_sizes","text":"_show_sizes(io::IO, dims::Vector)\n_show_sizes(io::IO, dims::Vector, sep::String)\n_show_sizes(io::IO, dims::Vector, sep::String, Lcut::Int64)\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors._update_tensor_backwards-Union{Tuple{T}, Tuple{S}, Tuple{S, T, Any, Val{:c}}} where {S<:AbstractArray{Float64, 3}, T<:AbstractDict}","page":"-","title":"SpinGlassTensors._update_tensor_backwards","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._update_tensor_backwards-Union{Tuple{T}, Tuple{S}, Tuple{S, T, Any, Val{:n}}} where {S<:AbstractArray{Float64, 3}, T<:AbstractDict}","page":"-","title":"SpinGlassTensors._update_tensor_backwards","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._update_tensor_forward-Union{Tuple{T}, Tuple{S}, Tuple{S, T, Any, Val{:c}}} where {S<:AbstractArray{Float64, 3}, T<:AbstractDict}","page":"-","title":"SpinGlassTensors._update_tensor_forward","text":"_update_tensor_forward(A::AbstractArray{Float64, 3}, M::AbstractDict, sites, _::Val{:c}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._update_tensor_forward-Union{Tuple{T}, Tuple{S}, Tuple{S, T, Any, Val{:n}}} where {S<:AbstractArray{Float64, 3}, T<:AbstractDict}","page":"-","title":"SpinGlassTensors._update_tensor_forward","text":"_update_tensor_forward(A::AbstractArray{Float64, 3}, M::AbstractDict, sites, _::Val{:n}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors._verify_square-Tuple{AbstractMPS}","page":"-","title":"SpinGlassTensors._verify_square","text":"_verify_square(ψ::AbstractMPS)\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.bond_dimension-Tuple{AbstractMPO}","page":"-","title":"SpinGlassTensors.bond_dimension","text":"bond_dimension(a::AbstractMPO) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.bond_dimension-Tuple{AbstractMPS}","page":"-","title":"SpinGlassTensors.bond_dimension","text":"bond_dimension(a::AbstractMPS) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.bond_dimension-Tuple{AbstractPEPSRow}","page":"-","title":"SpinGlassTensors.bond_dimension","text":"bond_dimension(a::AbstractPEPSRow) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.canonise!-Tuple{AbstractMPS, Symbol}","page":"-","title":"SpinGlassTensors.canonise!","text":"canonise!(ψ::AbstractMPS, s::Symbol)\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.canonise!-Tuple{AbstractMPS, Val{:left}}","page":"-","title":"SpinGlassTensors.canonise!","text":"canonise!(ψ::AbstractMPS, _::Val{:left})\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.canonise!-Tuple{AbstractMPS, Val{:right}}","page":"-","title":"SpinGlassTensors.canonise!","text":"canonise!(ψ::AbstractMPS, _::Val{:right})\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.canonise!-Tuple{QMPS, Symbol}","page":"-","title":"SpinGlassTensors.canonise!","text":"canonise!(ψ::QMPS, s::Symbol)\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.canonise!-Tuple{QMPS, Val{:left}}","page":"-","title":"SpinGlassTensors.canonise!","text":"canonise!(ψ::QMPS, _::Val{:left})\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.canonise!-Tuple{QMPS, Val{:right}}","page":"-","title":"SpinGlassTensors.canonise!","text":"canonise!(ψ::QMPS, _::Val{:right})\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.clear_env_containing_site!-Tuple{SpinGlassTensors.Environment, Union{Rational{Int64}, Int64}}","page":"-","title":"SpinGlassTensors.clear_env_containing_site!","text":"clear_env_containing_site!(env::SpinGlassTensors.Environment, site::Union{Rational{Int64}, Int64}) -> Dict{Tuple{Union{Rational{Int64}, Int64}, Symbol}, Tensor{T}} where T<:Real\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.compress","page":"-","title":"SpinGlassTensors.compress","text":"compress(ϕ::AbstractMPS, Dcut::Int64) -> MPS\ncompress(ϕ::AbstractMPS, Dcut::Int64, tol::Number) -> MPS\ncompress(ϕ::AbstractMPS, Dcut::Int64, tol::Number, max_sweeps::Int64) -> MPS\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors.compress!","page":"-","title":"SpinGlassTensors.compress!","text":"compress!(ϕ::AbstractMPS, Dcut::Int64) -> Any\ncompress!(ϕ::AbstractMPS, Dcut::Int64, tol::Number) -> Any\ncompress!(ϕ::AbstractMPS, Dcut::Int64, tol::Number, max_sweeps::Int64) -> Any\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors.compress!-Tuple{QMPS, QMPO, QMPS}","page":"-","title":"SpinGlassTensors.compress!","text":"compress!(bra::QMPS, mpo::QMPO, ket::QMPS; tol, max_sweeps) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.compress_twosite!","page":"-","title":"SpinGlassTensors.compress_twosite!","text":"compress_twosite!(bra::QMPS, mpo::QMPO, ket::QMPS, Dcut::Int64) -> Any\ncompress_twosite!(bra::QMPS, mpo::QMPO, ket::QMPS, Dcut::Int64, tol::Real) -> Any\ncompress_twosite!(bra::QMPS, mpo::QMPO, ket::QMPS, Dcut::Int64, tol::Real, max_sweeps::Int64) -> Any\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors.contract_down-Union{Tuple{T}, Tuple{AbstractArray{T, 3}, AbstractArray{T, 4}}} where T","page":"-","title":"SpinGlassTensors.contract_down","text":"contract_down(A::AbstractArray{T, 3}, B::AbstractArray{T, 4}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.contract_down-Union{Tuple{T}, Tuple{AbstractArray{T, 3}, AbstractMatrix{T}}} where T","page":"-","title":"SpinGlassTensors.contract_down","text":"contract_down(A::AbstractArray{T, 3}, B::AbstractArray{T, 2}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.contract_left-Union{Tuple{T}, Tuple{AbstractArray{T, 3}, AbstractMatrix{T}}} where T","page":"-","title":"SpinGlassTensors.contract_left","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.contract_up-Union{Tuple{T}, Tuple{AbstractArray{T, 3}, AbstractArray{T, 4}}} where T","page":"-","title":"SpinGlassTensors.contract_up","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.contract_up-Union{Tuple{T}, Tuple{AbstractArray{T, 3}, AbstractMatrix{T}}} where T","page":"-","title":"SpinGlassTensors.contract_up","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.contract_up-Union{Tuple{T}, Tuple{AbstractArray{T, 3}, SparseSiteTensor}} where T","page":"-","title":"SpinGlassTensors.contract_up","text":"contract_up(A::AbstractArray{T, 3}, B::SparseSiteTensor) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.contract_up-Union{Tuple{T}, Tuple{AbstractArray{T, 3}, SparseVirtualTensor}} where T","page":"-","title":"SpinGlassTensors.contract_up","text":"contract_up(A::AbstractArray{T, 3}, B::SparseVirtualTensor) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.dropindices","page":"-","title":"SpinGlassTensors.dropindices","text":"dropindices(ψ::AbstractMPS) -> Base.Generator{_A, SpinGlassTensors.var\"#3#4\"{Int64}} where _A\ndropindices(ψ::AbstractMPS, i::Int64) -> Base.Generator{_A, SpinGlassTensors.var\"#3#4\"{Int64}} where _A\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors.is_left_normalized-Tuple{MPS}","page":"-","title":"SpinGlassTensors.is_left_normalized","text":"is_left_normalized(ψ::MPS) -> Union{Missing, Bool}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.is_right_normalized-Tuple{MPS}","page":"-","title":"SpinGlassTensors.is_right_normalized","text":"is_right_normalized(ϕ::MPS) -> Union{Missing, Bool}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.left_env-Tuple{AbstractMPS, AbstractMPS}","page":"-","title":"SpinGlassTensors.left_env","text":"left_env(ϕ::AbstractMPS, ψ::AbstractMPS) -> Any\n\n\nCreates left environment (ϕ - bra, ψ - ket)\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.left_env-Tuple{AbstractMPS, Vector{Int64}}","page":"-","title":"SpinGlassTensors.left_env","text":"left_env(ϕ::AbstractMPS, σ::Vector{Int64}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.local_dims-Tuple{QMPO, Symbol}","page":"-","title":"SpinGlassTensors.local_dims","text":"local_dims(mpo::QMPO, dir::Symbol) -> Dict{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.measure_env-Tuple{SpinGlassTensors.Environment, Union{Rational{Int64}, Int64}}","page":"-","title":"SpinGlassTensors.measure_env","text":"measure_env(env::SpinGlassTensors.Environment, site::Union{Rational{Int64}, Int64}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.overlap_density_matrix-Tuple{QMPS, QMPS, Union{Rational{Int64}, Int64}}","page":"-","title":"SpinGlassTensors.overlap_density_matrix","text":"overlap_density_matrix(ϕ::QMPS, ψ::QMPS, k::Union{Rational{Int64}, Int64}) -> AbstractArray\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.physical_dim-Tuple{AbstractMPS, Int64}","page":"-","title":"SpinGlassTensors.physical_dim","text":"physical_dim(ψ::AbstractMPS, i::Int64) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.project_ket_on_bra-Tuple{SpinGlassTensors.Environment, Union{Rational{Int64}, Int64}}","page":"-","title":"SpinGlassTensors.project_ket_on_bra","text":"project_ket_on_bra(env::SpinGlassTensors.Environment, site::Union{Rational{Int64}, Int64}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.project_ket_on_bra-Union{Tuple{S}, Tuple{T}, Tuple{S, S, T, S, Val{:c}}} where {T<:AbstractArray{Float64, 4}, S<:AbstractArray{Float64, 3}}","page":"-","title":"SpinGlassTensors.project_ket_on_bra","text":"project_ket_on_bra(LE::AbstractArray{Float64, 3}, B::AbstractArray{Float64, 3}, M::AbstractArray{Float64, 4}, RE::AbstractArray{Float64, 3}, _::Val{:c}) -> AbstractArray\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.project_ket_on_bra-Union{Tuple{S}, Tuple{T}, Tuple{S, S, T, S, Val{:c}}} where {T<:AbstractMatrix{Float64}, S<:AbstractArray{Float64, 3}}","page":"-","title":"SpinGlassTensors.project_ket_on_bra","text":"project_ket_on_bra(_::AbstractArray{Float64, 3}, B::AbstractArray{Float64, 3}, M::AbstractMatrix{Float64}, _::AbstractArray{Float64, 3}, _::Val{:c}) -> AbstractArray\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.project_ket_on_bra-Union{Tuple{S}, Tuple{T}, Tuple{S, S, T, S, Val{:n}}} where {T<:AbstractArray{Float64, 4}, S<:AbstractArray{Float64, 3}}","page":"-","title":"SpinGlassTensors.project_ket_on_bra","text":"project_ket_on_bra(LE::AbstractArray{Float64, 3}, B::AbstractArray{Float64, 3}, M::AbstractArray{Float64, 4}, RE::AbstractArray{Float64, 3}, _::Val{:n}) -> AbstractArray\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.project_ket_on_bra-Union{Tuple{S}, Tuple{T}, Tuple{S, S, T, S, Val{:n}}} where {T<:AbstractMatrix{Float64}, S<:AbstractArray{Float64, 3}}","page":"-","title":"SpinGlassTensors.project_ket_on_bra","text":"project_ket_on_bra(_::AbstractArray{Float64, 3}, B::AbstractArray{Float64, 3}, M::AbstractMatrix{Float64}, _::AbstractArray{Float64, 3}, _::Val{:n}) -> AbstractArray\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.project_ket_on_bra_twosite-Tuple{SpinGlassTensors.Environment, Union{Rational{Int64}, Int64}}","page":"-","title":"SpinGlassTensors.project_ket_on_bra_twosite","text":"project_ket_on_bra_twosite(env::SpinGlassTensors.Environment, site::Union{Rational{Int64}, Int64}) -> AbstractArray\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.qr_fact","page":"-","title":"SpinGlassTensors.qr_fact","text":"qr_fact(M::AbstractMatrix) -> Tuple{Any, Any}\nqr_fact(M::AbstractMatrix, Dcut::Int64) -> Tuple{Any, Any}\nqr_fact(M::AbstractMatrix, Dcut::Int64, tol::Float64) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors.right_env-Tuple{AbstractMPS, AbstractMPS}","page":"-","title":"SpinGlassTensors.right_env","text":"right_env(ϕ::AbstractMPS, ψ::AbstractMPS) -> Any\n\n\nCreates right environment (ϕ - bra, ψ - ket)\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.right_env-Union{Tuple{T}, Tuple{AbstractMPS{T}, AbstractMPO{T}, Union{Vector, Tuple{Vararg{T, N}} where {N, T}}}} where T","page":"-","title":"SpinGlassTensors.right_env","text":"right_env(ϕ::AbstractMPS{T}, W::AbstractMPO{T}, σ::Union{Vector, Tuple{Vararg{T, N}} where {N, T}}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.rq_fact","page":"-","title":"SpinGlassTensors.rq_fact","text":"rq_fact(M::AbstractMatrix) -> Tuple{Any, Any}\nrq_fact(M::AbstractMatrix, Dcut::Int64) -> Tuple{Any, Any}\nrq_fact(M::AbstractMatrix, Dcut::Int64, tol::Float64) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors.trans-Union{Tuple{SpinGlassTensors.Environment{T, S}}, Tuple{S}, Tuple{T}} where {T, S}","page":"-","title":"SpinGlassTensors.trans","text":"\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.truncate!","page":"-","title":"SpinGlassTensors.truncate!","text":"truncate!(ψ::QMPS, s::Symbol)\ntruncate!(ψ::QMPS, s::Symbol, Dcut::Int64)\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors.truncate!-2","page":"-","title":"SpinGlassTensors.truncate!","text":"truncate!(ψ::AbstractMPS, s::Symbol)\ntruncate!(ψ::AbstractMPS, s::Symbol, Dcut::Int64)\n\n\n\n\n\n\n","category":"function"},{"location":"#SpinGlassTensors.update_env_left!-Tuple{SpinGlassTensors.Environment, Union{Rational{Int64}, Int64}}","page":"-","title":"SpinGlassTensors.update_env_left!","text":"update_env_left!(env::SpinGlassTensors.Environment, site::Union{Rational{Int64}, Int64}) -> Union{Nothing, Dict{Tuple{Union{Rational{Int64}, Int64}, Symbol}, Tensor{T}} where T<:Real}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.update_env_left-Union{Tuple{T}, Tuple{AbstractArray{T, 3}, AbstractArray{T, 3}, Dict, AbstractArray{T, 3}, Symbol}} where T<:Real","page":"-","title":"SpinGlassTensors.update_env_left","text":"update_env_left(LE::AbstractArray{T<:Real, 3}, A₀::AbstractArray{T<:Real, 3}, M::Dict, B₀::AbstractArray{T<:Real, 3}, trans::Symbol) -> AbstractArray\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.update_env_right!-Tuple{SpinGlassTensors.Environment, Union{Rational{Int64}, Int64}}","page":"-","title":"SpinGlassTensors.update_env_right!","text":"update_env_right!(env::SpinGlassTensors.Environment, site::Union{Rational{Int64}, Int64}) -> Union{Nothing, Dict{Tuple{Union{Rational{Int64}, Int64}, Symbol}, Tensor{T}} where T<:Real}\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.update_env_right-Union{Tuple{S}, Tuple{T}, Tuple{S, S, T, S}, Tuple{S, S, T, S, Symbol}} where {T<:Dict, S}","page":"-","title":"SpinGlassTensors.update_env_right","text":"update_env_right(RE, A₀, M::Dict, B₀) -> AbstractArray\nupdate_env_right(RE, A₀, M::Dict, B₀, trans::Symbol) -> AbstractArray\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.verify_bonds-Tuple{AbstractMPS}","page":"-","title":"SpinGlassTensors.verify_bonds","text":"verify_bonds(ψ::AbstractMPS)\n\n\n\n\n\n\n","category":"method"},{"location":"#SpinGlassTensors.verify_physical_dims-Tuple{AbstractMPS, Tuple{Vararg{T, N}} where {N, T}}","page":"-","title":"SpinGlassTensors.verify_physical_dims","text":"verify_physical_dims(ψ::AbstractMPS, dims::Tuple{Vararg{T, N}} where {N, T})\n\n\n\n\n\n\n","category":"method"}]
}
